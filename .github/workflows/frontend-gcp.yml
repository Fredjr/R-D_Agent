name: Frontend Deploy (Cloud Run)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Enable required services (idempotent)
        run: |
          gcloud services enable run.googleapis.com artifactregistry.googleapis.com -q

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install & Build
        run: |
          npm ci --no-audit --no-fund
          if [ -n "${{ secrets.BACKEND_PUBLIC_URL }}" ]; then
            echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.BACKEND_PUBLIC_URL }}" >> $GITHUB_ENV
          else
            for i in 1 2 3 4 5; do
              BACKEND_URL=$(gcloud run services describe ${{ secrets.BACKEND_SERVICE }} --region ${{ secrets.GCP_REGION }} --format='value(status.url)' 2>/dev/null || true)
              if [ -n "$BACKEND_URL" ]; then
                echo "NEXT_PUBLIC_BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
                break
              fi
              echo "Backend URL not ready yet. Retrying in 20s ($i/5)..." && sleep 20
            done
          fi
          echo "Using NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL:-unset}"
          npm run build

      - name: Build & Push image
        run: |
          REPO=${{ secrets.GCP_PROJECT_ID }}/${{ secrets.AR_REPO || 'rd-agent' }}
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/$REPO/frontend:$(git rev-parse --short HEAD)
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          REPO=${{ secrets.GCP_PROJECT_ID }}/${{ secrets.AR_REPO || 'rd-agent' }}
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/$REPO/frontend:$(git rev-parse --short HEAD)
          gcloud run deploy ${{ secrets.FRONTEND_SERVICE }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --cpu 1 --memory 512Mi \
            --timeout 180 \
            --set-env-vars=NEXT_PUBLIC_BACKEND_URL=${{ env.NEXT_PUBLIC_BACKEND_URL }}

